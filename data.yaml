dependencies:
  "lib.dates_to_strings": "dts"

extract:
  - step: Download the data via HTTP
    action: extract.source.http.DownloadFiles
    fetch:
      - "https://raw.githubusercontent.com/enigmadocs/excel-dates/master/input.xls"

  - step: Set output schema
    action: transform.schema.SetSchema
    fields:
      - name: First
        type: string
      - name: Last
        type: string
      - name: DOB
        type: date
      - name: Gender
        type: string

  - step: Extract fields from file
    action: extract.formats.xls.ReadRecords
    timezone: US/Eastern

transform:
  - step: Remove header row
    action: transform.filter.FilterRecords
    filter_list:
      - record_offset: 0
        match:
          - field_name: First
            patterns:
              - '^First$'
          - field_name: Last
            patterns:
              - '^Last$'

  - step:
    action: transform.strings.DisambiguateNulls
    null_patterns:
      - '^\s*$'
    nulls:
      - 'Not specified'

  - step: Write the record
    action: debug.LogValues

  - step: Convert datetime objects and decimals to strings
    action: dts.DatesToStrings
    fields:
      - DOB

  - step: Write the transformed record
    action: debug.LogValues

  - step: Convert date of birth
    action: transform.conversion.ParseDatetime
    store_unparsed: yes
    fields:
      - field_name: DOB
        formats:
          - "M/D/YYYY"
          - "MM/DD/YYYY"
          - "MMM D, YYYY"
          - "MMMM D, YYYY"
          - "YYYY-MM-DD HH:mm:ss"
          - "YYYY-MM-DD HH:mm:ss-hh:mm"
        date_only: yes

  - step: Write the transformed record
    action: debug.LogValues

load:
  - step: Set the datapath
    action: load.SetTableName
    table_name: concourse.demo.citibike

  - step: Send to Assembly
    action: load.OutputAbstract
    trusted: yes
    db_boundary: concourse.demo
    repository: '{ context.repository }'
    credentials: '{ context.credentials }'
